language: node_js
node_js:
  - "0.10"
  - "0.12"
  - "1.8"
  - "2.5"
  - "3.3"
  - "4.9"
  - "5.12"
  - "6.17"
  - "7.10"
  - "8.15"
  - "9.11"
  - "10.15"
  - "11.12"
sudo: false
dist: trusty
cache:
  directories:
    - node_modules
before_install:
  - |
    # Setup utility functions
    function node_version_lt () {
      [[ "$(v "$TRAVIS_NODE_VERSION")" -lt "$(v "${1}")" ]]
    }
    function npm_module_installed () {
      npm -lsp ls | grep -Fq "$(pwd)/node_modules/${1}:${1}@"
    }
    function npm_remove_module_re () {
      node -e '
        fs = require("fs");
        p = JSON.parse(fs.readFileSync("package.json", "utf8"));
        r = RegExp(process.argv[1]);
        for (k in p.devDependencies) {
          if (r.test(k)) delete p.devDependencies[k];
        }
        fs.writeFileSync("package.json", JSON.stringify(p, null, 2) + "\n");
      ' "$@"
    }
    function npm_use_module () {
      node -e '
        fs = require("fs");
        p = JSON.parse(fs.readFileSync("package.json", "utf8"));
        p.devDependencies[process.argv[1]] = process.argv[2];
        fs.writeFileSync("package.json", JSON.stringify(p, null, 2) + "\n");
      ' "$@"
    }
    function v () {
      tr '.' '\n' <<< "${1}" \
        | awk '{ printf "%03d", $0 }' \
        | sed 's/^0*//'
    }
  # Configure npm
  - |
    # Skip updating shrinkwrap / lock
    npm config set shrinkwrap false
  # Setup Node.js version-specific dependencies
  - |
    # eslint for linting
    # - remove on Node.js < 6
    if node_version_lt '6.0'; then npm_remove_module_re '^eslint(-|$)'
    fi
  - |
    # Configure mocha for testing
    if   node_version_lt '0.10'; then npm_use_module 'mocha' '2.5.3'
    elif node_version_lt '4.0' ; then npm_use_module 'mocha' '3.5.3'
    elif node_version_lt '6.0' ; then npm_use_module 'mocha' '5.2.0'
    fi
  - |
    # Configure nyc for testing
    if   node_version_lt '4.0'; then npm_use_module 'nyc' '10.3.2'
    elif node_version_lt '6.0'; then npm_use_module 'nyc' '11.9.0'
    fi
  - |
    # Configure supertest for http calls
    if   node_version_lt '0.10'; then npm_use_module 'supertest' '1.1.0'
    elif node_version_lt '4.0' ; then npm_use_module 'supertest' '2.0.0'
    elif node_version_lt '6.0' ; then npm_use_module 'supertest' '3.4.2'
    fi
  # Update Node.js modules
  - |
    # Prune & rebuild node_modules
    if [[ -d node_modules ]]; then
      npm prune
      npm rebuild
    fi
before_scrpt:
  - |
    # Contents of node_modules
    npm -s ls ||:
script:
  - |
    # Run test script, depending on nyc install
    if npm_module_installed 'nyc'; then npm run-script test-ci
    else npm test
    fi
  - |
    # Run linting, if eslint exists
    if npm_module_installed 'eslint'; then npm run-script lint
    fi
after_script:
  - |
    # Upload coverage to coveralls if exists
    if [[ -d .nyc_output ]]; then
      npm install --save-dev coveralls@2
      nyc report --reporter=text-lcov | coveralls
    fi
